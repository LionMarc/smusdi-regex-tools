name: Publish

on:
  workflow_dispatch:
    inputs:
      package_version:
        required: true
        type: string
        description: Minor.Patch, Major is set according to targetted .NET or angular version
  release:
    types: [published]

jobs:
  setup_env:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.setup_version.outputs.VERSION }}
    steps:
      - name: setup_version
        id: setup_version
        run: |
          if ( "${{ inputs.package_version }}" != "" ); 
          then echo "VERSION=${{ inputs.package_version }}"; 
          else echo "VERSION=${{ github.event.release.tag_name }}"
          fi >> $GITHUB_OUTPUT
      
  call_shared_build:
    needs: setup_env
    uses: ./.github/workflows/shared_build.yml
    with:
      dotnet_package_version: ${{ needs.setup_env.outputs.release_version }}
      angular_package_version: ${{ needs.setup_env.outputs.release_version }}

  publish_dotnet:
    name: Publish .NET package
    needs: call_shared_build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: smusdi-regextools
          path: ./nuget-packages
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
      - name: Publish
        run: dotnet nuget push ./nuget-packages/*.nupkg --api-key ${{ secrets.NUGET_ORG_TOKEN }} --source "https://api.nuget.org/v3/index.json"

  publish_angular:
    name: Publish angular package
    needs: call_shared_build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ngssm-regex-tools
          path: ./angular-packages
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - run: cd ./angular-packages && npm publish *.tgz
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

